* {
    padding: 0;
    margin: 0;
}

body {
    background-color: black;
}

a {
    text-decoration: none;
}

a {
    display: inline-block;
    position: absolute;
    width: 240px;
    height: 100px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    line-height: 100px;
    font-size: 30px;
    /* 该属性控制内容大小写 */
    text-transform: uppercase;
    font-family: sans-serif;
    color: #fff;
    /* box-sizing 属性定义了 user agent 应该如何计算一个元素的总宽度和总高度   
    border-box 告诉浏览器：你想要设置的边框和内边距的值是包含在width内的。也就是说，如果你将一个元素的width设为100px，那么这100px会包含它
    的border和padding，内容区的实际宽度是width减去(border + padding)的值。大多数情况下，这使得我们更容易地设定一个元素的宽高。*/
    box-sizing: border-box;
    /* linear-gradient() 函数简变颜色*/
    background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);
    /* 渐变色在盒子里面显示完，过于密集，因此设置背景尺寸，更加贴近渐变效果 */
    background-size: 400%;
    border-radius: 120px;
    z-index: 1;
}

a:hover {
    animation: animate 8s linear infinite;
}

a:before {
    content: '';
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    z-index: -1;
    /* 再加一层颜色，中和 */
    background: linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);
    background-size: 400%;
    border-radius: 1200px;
    /* filter 将模糊或颜色偏移等图形效果应用于元素。滤镜通常用于调整图像、背景和边框的渲染。 filter: blur(); 实现高斯模糊效果，不可不知的细节优化 */
    filter: blur(20px);
    opacity: 0;
    transition: 0.5s;
}

a:hover:before {
    filter: blur(20px);
    opacity: 1;
    animation: animate 8s linear infinite;
}

@keyframes animate {
    0% {
        background-position: 0%;
    }
    100% {
        background-position: 400%;
    }
}